# O4_CONFIG I18N STRINGS for US English
# Higgins Dragon <higgins@higginsdragon.com>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: 1.30\n"
"POT-Creation-Date: 2019-03-02 08:49+UTC\n"
"PO-Revision-Date: 2019-03-02 08:49+UTC\n"
"Last-Translator: Higgins Dragon <higgins@higginsdragon.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: ENCODING\n"
"Generated-By: pygettext.py 1.5\n"


#: src/O4_Config_Utils.py:19
msgid "verbosity hint"
msgstr "Verbosity determines the amount of information about the whole process which is printed on screen. Critical errors, if any, are reported in all states as well as in the Log. Values above 1 are probably only useful for for debug purposes."

#: src/O4_Config_Utils.py:20
msgid "cleaning_level hint"
msgstr "Determines which temporary files are removed. Level 3 erases everything except the config and what is needed for X-Plane; Level 2 erases everything except what is needed to redo the current step only; Level 1 allows you to redo any prior step; Level 0 keeps every single file."

#: src/O4_Config_Utils.py:21
msgid "overpass_server_choice hint"
msgstr "The (country) of the Overpass OSM server used to grab vector data. It can be modified on the fly (as all _Application_ variables) in case of problem with a particular server."

#: src/O4_Config_Utils.py:22
msgid "skip_downloads hint"
msgstr "Will only build the DSF and TER files but not the textures (neither download nor convert). This could be useful in cases where imagery cannot be shared."

#: src/O4_Config_Utils.py:23
msgid "skip_converts hint"
msgstr "Imagery will be downloaded but not converted from jpg to dds. Some user prefer to postprocess imagery with third party softwares prior to the dds conversion. In that case Step 3 needs to be run a second time after the retouch work."

#: src/O4_Config_Utils.py:24
msgid "max_convert_slots hint"
msgstr "Number of parallel threads for dds conversion. Should be mainly dictated by the number of cores in your CPU."

#: src/O4_Config_Utils.py:25
msgid "check_tms_response hint"
msgstr "When set, internal server errors (HTTP [500] and the likes) yields new requests, if not a white texture is used in place."

#: src/O4_Config_Utils.py:26
msgid "http_timeout hint"
msgstr "Delay before we decide that a http request is timed out."

#: src/O4_Config_Utils.py:27
msgid "max_connect_retries hint"
msgstr "How much times do we try again after a failed connection for imagery request. Only used if check_tms_response is set to True."

#: src/O4_Config_Utils.py:28
msgid "max_baddata_retries hint"
msgstr "How much times do we try again after an internal server error for an imagery request. Only used if check_tms_response is set to True."

#: src/O4_Config_Utils.py:29
msgid "ovl_exclude_pol hint"
msgstr "Indices of polygon types which one would like to left aside in the extraction of overlays. The list of these indices in front of their name can be obtained by running the \"extract overlay\" process with verbosity = 2 (skip facades that can be numerous) or 3. Index 0 corresponds to beaches in Global and HD sceneries. Strings can be used in places of indices, in that case any polygon_def that contains that string is excluded, and the string can begin with a ! to invert the matching. As an exmaple, [\"!.for\"] would exclude everything but forests."

#: src/O4_Config_Utils.py:30
msgid "ovl_exclude_net hint"
msgstr "Indices of road types which one would like to left aside in the extraction of overlays. The list of these indices is can be in the roads.net file within X-Plane Resources, but some sceneries use their own corresponding net definition file. Powerlines have index 22001 in XP11 roads.net default file."

#: src/O4_Config_Utils.py:31
msgid "custom_scenery_dir hint"
msgstr "Your X-Plane Custom Scenery. Used only for \"1-click\" creation (or deletion) of symbolic links from Ortho4XP tiles to there."

#: src/O4_Config_Utils.py:32
msgid "custom_overlay_src hint"
msgstr "The directory containing the sceneries with the overlays you would like to extract. You need to select the level of directory just _ABOVE_ Earth nav data."

#: src/O4_Config_Utils.py:34
msgid "apt_smoothing_pix hint"
msgstr "How much gaussian blur is applied to the elevation raster for the look up of altitude over airports. Unit is the evelation raster pixel size."

#: src/O4_Config_Utils.py:35
msgid "road_level hint"
msgstr "Allows to level the mesh along roads and railways. Zero means nothing such is included; \"1\" looks for banking ways among motorways, primary and secondary roads and railway tracks; \"2\" adds tertiary roads; \"3\" brings residential and unclassified roads; \"4\" takes service roads, and \"5\" finishes with tracks. Purge the small_roads.osm cached data if you change your mind in between the levels 2-5."

#: src/O4_Config_Utils.py:36
msgid "road_banking_limit hint"
msgstr "How much sloped does a roads need to be to be in order to be included in the mesh levelling process. The value is in meters, measuring the height difference between a point in the center of a road node and its closest point on the side of the road."

#: src/O4_Config_Utils.py:37
msgid "lane_width hint"
msgstr "With (in meters) to be used for buffering that part of the road network that requires levelling."

#: src/O4_Config_Utils.py:38
msgid "max_levelled_segs hint"
msgstr "This limits the total number of roads segments included for mesh levelling, in order to keep triangle count under control in case of abundant OSM data."

#: src/O4_Config_Utils.py:39
msgid "water_simplification hint"
msgstr "In case the OSM data for water areas would become too large, this parameter (in meter) can be used for node simplification."

#: src/O4_Config_Utils.py:40
msgid "min_area hint"
msgstr "Minimum area (in km^2) a water patch needs to be in order to be included in the mesh as such. Contiguous water patches are merged before area computation."

#: src/O4_Config_Utils.py:41
msgid "max_area hint"
msgstr "Any water patch larger than this quantity (in km^2) will be masked like the sea."

#: src/O4_Config_Utils.py:42
msgid "clean_bad_geometries hint"
msgstr "When set, all OSM geometries are checked for self-intersection and merged between themselves in case of overlapping, allowing (hopefully!) to go around most OSM errors. This is computationally expensive, especially in places where OSM road/water data is detailed, and this is the reason for this switch, but if you are not in a hurry it is probably wise leaving it always activated."

#: src/O4_Config_Utils.py:43
msgid "mesh_zl hint"
msgstr "The mesh will be preprocessed to accept later any combination of imageries up to and including a zoomlevel equal to mesh_zl. Lower value could save a few tens of thousands triangles, but put a limitation on the maximum allowed imagery zoomlevel."

#: src/O4_Config_Utils.py:45
msgid "curvature_tol hint"
msgstr "This parameter is intrinsically linked the mesh final density. Mesh refinement is mostly based on curvature computations on the elevation data (the exact decision rule can be found in _ triunsuitable() _ in Utils/Triangle4XP.c). A higher curvature tolerance yields fewer triangles."

#: src/O4_Config_Utils.py:46
msgid "apt_curv_tol hint"
msgstr "If smaller, it supersedes curvature_tol over airports neighbourhoods."

#: src/O4_Config_Utils.py:47
msgid "apt_curv_ext hint"
msgstr "Extent (in km) around the airports where apt_curv_tol applies."

#: src/O4_Config_Utils.py:48
msgid "coast_curv_tol hint"
msgstr "If smaller, it supersedes curvature_tol along the coastline."

#: src/O4_Config_Utils.py:49
msgid "coast_curv_ext hint"
msgstr "Extent (in km) around the coastline where coast_curv_tol applies."

#: src/O4_Config_Utils.py:50
msgid "limit_tris hint"
msgstr "If non zero, upper bound on the number of final triangles in the mesh."

#: src/O4_Config_Utils.py:51
msgid "hmin hint"
msgstr "The mesh algorithm will not try to subdivide triangles whose shortest edge is already smaller than hmin (in meters). If hmin is smaller than half of the levation data step size, it will default to it anyhow (its default zero value thus means : as good as the DEM can do)."

#: src/O4_Config_Utils.py:52
msgid "min_angle hint"
msgstr "The mesh algorithm will try to not have mesh triangles with second smallest angle less than the value (in deg) of min_angle (prior to v1.3 it was the smallest, not second smallest) The goal behind this is to avoid potential artifacts when a triangle vertex is very close the the middle of its facing edge."

#: src/O4_Config_Utils.py:53
msgid "sea_smoothing_mode hint"
msgstr "Zero means that all nodes of sea triangles are set to zero elevation. With mean, some kind of smoothing occurs (triangles are levelled one at a time to their mean elevation), None (a value mostly appropriate for DEM resolution of 10m and less), positive altitudes of sea nodes are kept intact, only negative ones are brought back to zero, this avoids to create unrealistic vertical cliffs if the coastline vector data was lower res."

#: src/O4_Config_Utils.py:54
msgid "water_smoothing hint"
msgstr "Number of smoothing passes over all inland water triangles (sequentially set to their mean elevation)."

#: src/O4_Config_Utils.py:55
msgid "iterate hint"
msgstr "Allows to refine a mesh using higher resolution elevation data of local scope only (requires Gdal), typically LIDAR data. Having an iterate number is handy to go backward one step when some choice of parameters needs to be revised. REQUIRES cleaning_level=0."

#: src/O4_Config_Utils.py:57
msgid "mask_zl hint"
msgstr "The zoomlevel at which the (sea) water masks are built. Masks are used for alpha channel, and this channel usually requires less resolution than the RGB ones, the reason for this (VRAM saving) parameter. If the coastline and elevation data are very detailed, it might be interesting to lift this parameter up so that the masks can reproduce this complexity."

#: src/O4_Config_Utils.py:58
msgid "masks_width hint"
msgstr "Maximum extent of the masks perpendicularly to the coastline (rough definition). NOTE: The value is now in meters, it used to be in ZL14 pixel size in earlier verions, the scale is roughly one to ten between both."

#: src/O4_Config_Utils.py:59
msgid "masking_mode hint"
msgstr "A selection of three tentative masking algorithms (still looking for the Holy Grail...). The first two (sand and rocks) requires masks_width to be a single value; the third one (3steps) requires a list of the form [a,b,c] for masks width: \"a\" is the length in meters of a first transition from plain imagery at the shoreline towards ratio_water transparency, \"b\" is the second extent zone where transparency level is kept constant equal to ratio_water, and \"c\" is the last extent where the masks eventually fade to nothing. The transition with rocks is more abrupt than with sand."

#: src/O4_Config_Utils.py:60
msgid "use_masks_for_inland hint"
msgstr "Will use masks for the inland water (lakes, rivers, etc) too, instead of the default constant transparency level determined by ratio_water. This is VRAM expensive and presumably not really worth the price."

#: src/O4_Config_Utils.py:61
msgid "imprint_masks_to_dds hint"
msgstr "Will apply masking directly to dds textures (at the Build Imagery/DSF step) rather than using external png files. This doubles the file size of masked textures (dxt5 vs dxt1) but reduce the overall VRAM footprint (a matter of choice!)"

#: src/O4_Config_Utils.py:62
msgid "masks_use_DEM_too hint"
msgstr "If you have acces to high resolutions DEMs (really shines with 5m or lower), you can use the elevation in addition to the vector data in order to draw masks with higher precision. If the DEM is not high res, this option will yield unpleasant pixellisation."

#: src/O4_Config_Utils.py:63
msgid "masks_custom_extent hint"
msgstr "Yet another tentative to draw masks with maximizing the use of the good imagery part. Requires to draw (JOSM) the \"good imagery\" threshold first, but it could be one order of magnitude faster to do compared to hand tweaking the masks and the imageries one by one."

#: src/O4_Config_Utils.py:68
msgid "cover_airports_with_highres hint"
msgstr "When set, textures above airports will be upgraded to a higher zoomlevel, the imagery being the same as the one they would otherwise receive. Can be limited to airports with an ICAO code for tiles with so many airports. Exceptional: use \"Existing\" to (try to) derive custom zl zones from the textures directory of an existing tile."

#: src/O4_Config_Utils.py:69
msgid "cover_extent hint"
msgstr "The extent (in km) past the airport boundary taken into account for higher ZL. Note that for VRAM efficiency higher ZL textures are fully used on their whole extent as soon as part of them are needed."

#: src/O4_Config_Utils.py:70
msgid "cover_zl hint"
msgstr "The zoomlevel with which to cover the airports zone when high_zl_airports is set. Note that if the cover_zl is lower than the zoomlevel which would otherwise be applied on a specific zone, the latter is used."

#: src/O4_Config_Utils.py:71
msgid "sea_texture_blur hint"
msgstr "For layers of type \"mask\" in combined providers imageries, determines the extent (in meters) of the blur radius applied. This allows to smoothen some sea imageries where the wave or reflection pattern was too much present."

#: src/O4_Config_Utils.py:72
msgid "add_low_res_sea_ovl hint"
msgstr "Will add an extra texture layer over the sea (with constant alpha channel given by ratio_water as for inland water), based on a low resolution imagery with global coverage. Masks with their full resolution imagery are still being used when present, the final render is a composite of both. The default imagery with code SEA can be changed as any other imagery defined in the Providers directory, it needs to have a max_zl defined and is used at its max_zl."

#: src/O4_Config_Utils.py:73
msgid "experimental_water hint"
msgstr "If non zero, replaces X-Plane water by a custom normal map over low res ortho-imagery (requires XP11 but turns water rendering more XP10 alike). The value 0 corresponds to legacy X-Plane water, 1 replaces it for inland water only, 2 over sea water only, and 3 over both. Values 2 and 3 should always be used in combination with \"imprint_masks_to_dds\".\n\nThis experimental feature has two strong downsides: 1) the waves are static rather dynamical (would require a plugin to update the normal_map as X-Plane does) and 2) the wave height is no longer weather dependent. On the other hand, waves might have less repetitive patterns and some blinking in water reflections might be improved too; users are welcome to improve the provided water_normal_map.dds (Gimp can be used to edit the mipmaps individually)."

#: src/O4_Config_Utils.py:74
msgid "ratio_water hint"
msgstr "Inland water rendering is made of two layers : one bottom layer of \"X-Plane water\" and one overlay layer of orthophoto with constant level of transparency applied. The parameter ratio_water (values between 0 and 1) determines how much transparency is applied to the orthophoto. At zero, the orthophoto is fully opaque and X-Plane water cannot be seen ; at 1 the orthophoto is fully transparent and only the X-Plane water is seen."

#: src/O4_Config_Utils.py:75
msgid "normal_map_strength hint"
msgstr "Orthophotos by essence already contain the part of the shading burned in (here by shading we mean the amount of reflected light in the camera direction as a function of the terrain slope, not the shadows). This option allows to tweak the normal coordinates of the mesh in the DSF to avoid \"overshading\", but it has side effects on the way X-Plane computes scenery shadows. Used to be 0.3 by default in earlier versions, the default is now 1 which means exact normals."

#: src/O4_Config_Utils.py:76
msgid "terrain_casts_shadows hint"
msgstr "If unset, the terrain itself will not cast (but still receive!) shadows. This option is only meaningful if scenery shadows are opted for in the X-Plane graphics settings."

#: src/O4_Config_Utils.py:77
msgid "overlay_lod hint"
msgstr "Distance until which overlay imageries (that is orthophotos over water) are drawn. Lower distances have a positive impact on frame rate and VRAM usage, and IFR flyers will probably need a higher value than VFR ones."

#: src/O4_Config_Utils.py:78
msgid "use_decal_on_terrain hint"
msgstr "Terrain files for all but water triangles will contain the maquify_1_green_key.dcl decal directive. The effect is noticeable at very low altitude and helps to overcome the orthophoto blur at such levels. Can be slightly distracting at higher altitude."

#: src/O4_Config_Utils.py:80
msgid "custom_dem hint"
msgstr "Path to an elevation data file to be used instead of the default Viewfinderpanoramas.org ones (J. de Ferranti). The raster must be in geopgraphical coordinates (EPSG:4326) but the extent need not match the tile boundary (requires Gdal). Regions of the tile that are not covered by the raster are mapped to zero altitude (can be useful for high resolution data over islands in particular)."

#: src/O4_Config_Utils.py:81
msgid "fill_nodata hint"
msgstr "When set, the no_data values in the raster will be filled by a nearest neighbour algorithm. If unset, they are turned into zero (can be useful for rasters with no_data over the whole oceanic part or partial LIDAR data)."

